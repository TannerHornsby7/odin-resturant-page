(()=>{"use strict";var n={192:(n,e,t)=>{t.d(e,{Z:()=>g});var A=t(537),r=t.n(A),o=t(645),a=t.n(o),i=t(667),c=t.n(i),s=new URL(t(400),t.b),l=new URL(t(627),t.b),d=new URL(t(142),t.b),f=a()(r()),C=c()(s),p=c()(l),u=c()(d);f.push([n.id,'@font-face{font-family:"Open Sans";src:url('+C+"),url("+C+');font-weight:1000;font-style:normal}@font-face{font-family:"Lobster";src:url('+p+');font-weight:800;font-style:normal}h1,h3{font-family:"Lobster"}*{margin:0;padding:0;box-sizing:border-box;font-family:"Open Sans"}html,body{width:100%;height:100%}ul,li{list-style:none}a{text-decoration:none}button,input{border:none;outline:none}.mainpage #ctitle{font-family:"Lobster"}.credits{font-family:"Lobster"}.container{width:100%;display:grid;background-image:url('+u+');background-size:cover;grid-template-rows:2fr 12fr 1fr;place-items:center}.container>*{display:flex;justify-content:center;align-items:center;width:100%;height:100%}.header{color:#f5f5f5;background-color:#2f4f4f;box-shadow:2px 2px 2px #f5f5f5;transition:all .5s ease;display:grid;grid-template-columns:1fr 3fr;max-height:150px}.header .company{justify-self:center;display:grid;grid-template-columns:1fr 1fr}.header img{height:70px;justify-self:right;align-self:center}.header h1{padding-left:2%;justify-self:left;align-self:center}.header .navbar{justify-self:right;height:100%;width:50%;display:grid;grid-template-columns:repeat(auto-fit, minmax(85px, 1fr));grid-auto-rows:1fr;row-gap:10px}.header .navbar *{color:#f5f5f5;background-color:#2f4f4f;box-shadow:2px 2px 2px #f5f5f5;transition:all .5s ease}.header .navbar>button{width:100%;height:100%;display:grid;place-items:center;border:2px solid #2f4f4f;padding-left:5%;padding-right:5%}.header .navbar>:hover{color:#2f4f4f;background-color:#f5f5f5;box-shadow:2px 2px 2px #2f4f4f;transition:all .5s ease;cursor:pointer}.footer{color:#f5f5f5;background-color:#2f4f4f;box-shadow:2px 2px 2px #f5f5f5;transition:all .5s ease;display:grid;grid-template-columns:1fr 1fr 1fr;justify-content:space-around;height:100%}.footer h3{padding:5%;font-style:italic}.footer .credits{text-align:center}.footer .contact{padding-right:5%;padding-left:50%}.activetab{color:#2f4f4f;background-color:#f5f5f5;box-shadow:2px 2px 2px #2f4f4f;transition:all .5s ease}.mainpage{color:#2f4f4f;background-color:#f5f5f5;box-shadow:2px 2px 2px #2f4f4f;transition:all .5s ease;min-height:500px;background:rgba(255,255,255,.3);font-family:"Lobster"}.mainpage .home{text-align:center;min-height:fit-content;height:70%;width:65%;background-color:rgba(245,245,245,.4);padding:5%;border:2px solid rgba(47,79,79,.4);display:flex;flex-direction:column;justify-content:space-between;align-items:center}.mainpage .home div div:first-child{font-size:100px;font-weight:900;padding:1%}.mainpage .home div div:last-child{margin-top:2%;color:rgba(0,0,0,.8);font-size:20px}.mainpage .home .ordernow{justify-self:center;border:2px solid #2f4f4f;background-color:#f5f5f5;color:#000;display:grid;place-items:center;padding:15px;padding-left:60px;padding-right:60px;margin-bottom:1%}.mainpage .home .ordernow:hover{color:#f5f5f5;background-color:#2f4f4f;box-shadow:2px 2px 2px #f5f5f5;transition:all .5s ease;cursor:pointer}.ctitle{font-size:100px;text-align:center}.cards{background-color:rgba(255,228,196,.2);width:100vw;display:grid;grid-template-columns:repeat(auto-fit, minmax(300px, 1fr));overflow-y:scroll;gap:10px;padding:2%}.cards .card{height:200px;grid-template-rows:2fr 1fr 5fr 3fr;text-align:center;color:#2f4f4f;background-color:#f5f5f5;box-shadow:2px 2px 2px #2f4f4f;transition:all .5s ease}.cards .card img{height:100px}',"",{version:3,sources:["webpack://./src/_formatting.scss","webpack://./src/style.scss"],names:[],mappings:"AACA,WACI,uBAAA,CACA,mFAAA,CACA,gBAAA,CACA,iBAAA,CAGJ,WACI,qBAAA,CACA,2CAAA,CACA,eAAA,CACA,iBAAA,CAKJ,MAEI,qBAAA,CAGJ,EACI,QAAA,CACA,SAAA,CACA,qBAAA,CACA,uBAAA,CAGJ,UAEI,UAAA,CACA,WAAA,CAGJ,MAEI,eAAA,CAGJ,EACI,oBAAA,CAGJ,aAEI,WAAA,CACA,YAAA,CAKJ,kBACI,qBAAA,CAGJ,SACI,qBAAA,CCnCJ,WACI,UAAA,CACA,YAAA,CACA,wDAAA,CACA,qBAAA,CACA,+BAAA,CACA,kBAAA,CAEA,aACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CAGR,QA7BQ,aANK,CAOL,wBANI,CAOJ,8BAAA,CAOJ,uBAAA,CAsBA,YAAA,CACA,6BAAA,CACA,gBAAA,CAEA,iBACI,mBAAA,CACA,YAAA,CACA,6BAAA,CAGJ,YACI,WAAA,CACA,kBAAA,CACA,iBAAA,CAGJ,WACI,eAAA,CACA,iBAAA,CACA,iBAAA,CAGJ,gBACI,kBAAA,CACA,WAAA,CACA,SAAA,CACA,YAAA,CACA,yDAAA,CACA,kBAAA,CACA,YAAA,CAEA,kBA9DA,aANK,CAOL,wBANI,CAOJ,8BAAA,CAOJ,uBAAA,CAyDI,uBACI,UAAA,CACA,WAAA,CACA,YAAA,CACA,kBAAA,CACA,wBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,uBAvEA,aAVI,CAWJ,wBAZK,CAaL,8BAAA,CAEJ,uBAAA,CAqEQ,cAAA,CAKZ,QAnFQ,aANK,CAOL,wBANI,CAOJ,8BAAA,CAOJ,uBAAA,CA4EA,YAAA,CACA,iCAAA,CACA,4BAAA,CACA,WAAA,CAGA,WACI,UAAA,CACA,iBAAA,CAGJ,iBACI,iBAAA,CAGJ,iBACI,gBAAA,CACA,gBAAA,CAIR,WArGQ,aAVI,CAWJ,wBAZK,CAaL,8BAAA,CAEJ,uBAAA,CAsGJ,UA1GQ,aAVI,CAWJ,wBAZK,CAaL,8BAAA,CAEJ,uBAAA,CAwGA,gBAAA,CACA,+BAAA,CACA,qBAAA,CAEA,gBACI,iBAAA,CACA,sBAAA,CACA,UAAA,CACA,SAAA,CACA,qCAAA,CACA,UAAA,CACA,kCAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CACA,kBAAA,CAEA,oCACI,eAAA,CACA,eAAA,CACA,UAAA,CAGJ,mCACI,aAAA,CACA,oBAAA,CACA,cAAA,CAGJ,0BACI,mBAAA,CACA,wBAAA,CACA,wBAvJC,CAwJD,UAAA,CACA,YAAA,CACA,kBAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CACA,gBAAA,CAGA,gCA3JJ,aANK,CAOL,wBANI,CAOJ,8BAAA,CAOJ,uBAAA,CAoJY,cAAA,CAOhB,QACI,eAAA,CACA,iBAAA,CAIJ,OACI,qCAAA,CACA,WAAA,CACA,YAAA,CACA,0DAAA,CACA,iBAAA,CACA,QAAA,CACA,UAAA,CAEA,aACI,YAAA,CACA,kCAAA,CACA,iBAAA,CAjLA,aAVI,CAWJ,wBAZK,CAaL,8BAAA,CAEJ,uBAAA,CAiLI,iBACI,YAAA",sourcesContent:["/* Custom Font */\n@font-face {\n    font-family: 'Open Sans';\n    src: url('assets/Open_Sans/OpenSans-Italic-VariableFont_wdth,wght.ttf'), url('assets/Open_Sans/OpenSans-Italic-VariableFont_wdth,wght.ttf');\n    font-weight: 1000;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Lobster';\n    src: url('assets/Lobster/Lobster-Regular.ttf');\n    font-weight: 800;\n    font-style: normal;\n}\n\n\n// setting basic element properties\nh1,\nh3 {\n    font-family: 'Lobster';\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Open Sans';\n}\n\nhtml,\nbody{\n    width: 100%;\n    height: 100%;\n}\n\nul,\nli {\n    list-style: none;\n}\n\na {\n    text-decoration: none;\n}\n\nbutton,\ninput {\n    border: none;\n    outline: none;\n}\n\n// Special font settings for titles\n\n.mainpage #ctitle {\n    font-family: 'Lobster';\n}\n\n.credits {\n    font-family: 'Lobster';\n}","@use 'formatting';\n\n// theme colors\n$lightcolor: whitesmoke;\n$darkcolor: darkslategrey;\n\n// setting theme\n@mixin theme($dark: true) {\n    @if($dark) {\n        color: $lightcolor;\n        background-color: $darkcolor;\n        box-shadow: 2px 2px 2px $lightcolor;\n    }\n    @else {\n        color: $darkcolor;\n        background-color: $lightcolor;\n        box-shadow: 2px 2px 2px $darkcolor;\n    }\n    transition: all .5s ease;\n}\n\n// setting layout style\n.container {\n    width: 100%;\n    display: grid;\n    background-image: url(./assets/ab.jpg);\n    background-size: cover;\n    grid-template-rows: 2fr 12fr 1fr;\n    place-items: center;\n\n    & > * {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n    }\n}\n.header {\n    @include theme;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n    max-height: 150px;\n\n    .company {\n        justify-self: center;\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n    }\n\n    img {\n        height: 70px;\n        justify-self: right;\n        align-self: center;\n    }\n\n    h1 {\n        padding-left: 2%;\n        justify-self: left;\n        align-self: center;\n    }\n\n    .navbar {\n        justify-self: right;\n        height: 100%;\n        width: 50%;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(85px, 1fr));\n        grid-auto-rows: 1fr;\n        row-gap: 10px;\n\n        * {\n        @include theme;\n        }\n\n        & > button {\n            width: 100%;\n            height: 100%;\n            display: grid;\n            place-items: center;\n            border: 2px solid $darkcolor;\n            padding-left: 5%;\n            padding-right: 5%;\n        }\n\n        & >:hover {\n            @include theme(false);\n            cursor: pointer;\n        }\n    }\n}\n\n.footer {\n    @include theme;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    justify-content: space-around;\n    height: 100%;\n\n\n    h3 {\n        padding: 5%;\n        font-style: italic;\n    }\n\n    .credits {\n        text-align: center;\n    }\n\n    .contact {\n        padding-right: 5%;\n        padding-left: 50%\n    }\n}\n\n.activetab {\n    @include theme(false);\n}\n\n// setting mainpage style\n.mainpage {\n    @include theme(false);\n    min-height: 500px;\n    background: rgba(255, 255, 255, .3);\n    font-family: 'Lobster';\n\n    .home {\n        text-align: center;\n        min-height: fit-content;\n        height: 70%;\n        width: 65%;\n        background-color: rgba($lightcolor, .4);\n        padding: 5%;\n        border: 2px solid rgba($darkcolor, .4);\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n\n        & div div:first-child {\n            font-size: 100px;\n            font-weight: 900;\n            padding: 1%;\n        }\n\n        & div div:last-child {\n            margin-top: 2%;\n            color: rgba(black, .8);\n            font-size: 20px;\n        }\n\n        .ordernow {\n            justify-self: center;\n            border: 2px solid $darkcolor;\n            background-color: $lightcolor;\n            color: black;\n            display: grid;\n            place-items: center;\n            padding: 15px;\n            padding-left: 60px;\n            padding-right: 60px;\n            margin-bottom: 1%;\n\n\n            &:hover {\n                @include theme(dark);\n                cursor: pointer;\n            }\n        }\n        \n    }\n}\n\n.ctitle {\n    font-size: 100px;\n    text-align: center;\n}\n\n// setting menue style\n.cards {\n    background-color: rgba(bisque, .2);\n    width: 100vw;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    overflow-y: scroll;\n    gap: 10px;\n    padding: 2%;\n\n    .card {\n        height: 200px;\n        grid-template-rows: 2fr 1fr 5fr 3fr;\n        text-align: center;\n\n        @include theme(false);\n\n        img {\n            height: 100px;\n        }\n    }\n\n}"],sourceRoot:""}]);const g=f},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",A=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),A&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),A&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,A,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(A)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);A&&a[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),o="/*# ".concat(r," */"),a=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,A=0;A<e.length;A++)if(e[A].identifier===n){t=A;break}return t}function A(n,A){for(var o={},a=[],i=0;i<n.length;i++){var c=n[i],s=A.base?c[0]+A.base:c[0],l=o[s]||0,d="".concat(s," ").concat(l);o[s]=l+1;var f=t(d),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==f)e[f].references++,e[f].updater(C);else{var p=r(C,A);A.byIndex=i,e.splice(i,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=A(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var i=t(o[a]);e[i].references--}for(var c=A(n,r),s=0;s<o.length;s++){var l=t(o[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var A=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,r&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(A,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},486:(n,e,t)=>{function A(n){const e=document.createElement("div");return e.classList.add(n),1==arguments[1]&&(e.textContent=n.toUpperCase()),e}function r(n){const e=document.createElement("button");return e.id=n,1==arguments[1]&&(e.textContent=n.toUpperCase()),e}function o(n){for(let e=1;e<arguments.length;e++)n.appendChild(arguments[e]);return n}t.d(e,{ax:()=>r,rG:()=>o,wC:()=>A})},627:(n,e,t)=>{n.exports=t.p+"03c38496322925fec242.ttf"},400:(n,e,t)=>{n.exports=t.p+"f72efa639bb45d29e62f.ttf"},142:(n,e,t)=>{n.exports=t.p+"c96c700ba024c1a11019.jpg"}},e={};function t(A){var r=e[A];if(void 0!==r)return r.exports;var o=e[A]={id:A,exports:{}};return n[A](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var A=e.getElementsByTagName("script");A.length&&(n=A[A.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(486),e=t(379),A=t.n(e),r=t(795),o=t.n(r),a=t(569),i=t.n(a),c=t(565),s=t.n(c),l=t(216),d=t.n(l),f=t(589),C=t.n(f),p=t(192),u={};u.styleTagTransform=C(),u.setAttributes=s(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=d(),A()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;const g=t.p+"4593476ab2c144de73a6.png",h=t.p+"43c707cf1d4a9c3e040f.jpg",m=t.p+"3ec79f027471792bbcd4.png";function b(e,t,A,r){const o=(0,n.wC)("card"),a=document.createElement("h3"),i=document.createElement("h4"),c=new Image,s=document.createElement("p");return a.textContent=e,i.textContent=t,c.src=A,s.textContent=r,(0,n.rG)(o,a,i,c,s)}!function(){const e=(0,n.wC)("container");e.style.backgroundImage=`url(${h})`,document.body.appendChild((0,n.rG)(e,function(e){const t=(0,n.wC)("header"),A=document.createElement("h1"),r=new Image;r.src=g,A.textContent="Sapori & Vini";const o=(0,n.wC)("company"),a=(0,n.wC)("navbar"),i=(0,n.ax)("home",!0),c=(0,n.ax)("menu",!0),s=(0,n.ax)("contact",!0);switch(e){case"home":default:i.classList.add("activetab");break;case"menu":c.classList.add("activetab");break;case"contact":s.classList.add("activetab")}const l=function(n){n.addEventListener("click",(()=>{for(i.classList.remove("active"),c.classList.remove("active"),s.classList.remove("active");document.body.firstChild;)document.body.removeChild(document.body.firstChild);n.classList.add("activetab")}))};return l(i),l(c),l(s),(0,n.rG)(o,r,A),(0,n.rG)(a,i,c,s),(0,n.rG)(t,o,a)}(),function(e){const t=(0,n.wC)("mainpage"),A=(0,n.wC)("menu"),r=(0,n.wC)("cards"),o=(0,n.wC)("ctitle"),a=b("Beverly Chamberlain","$340",m,"A rich wine with an oaky afterbirth"),i=b("Beverly Chamberlain","$340",m,"A rich wine with an oaky afterbirth"),c=b("Beverly Chamberlain","$340",m,"A rich wine with an oaky afterbirth"),s=b("Beverly Chamberlain","$340",m,"A rich wine with an oaky afterbirth");return(0,n.rG)(r,a,i,c,s),o.id="ctitle",o.innerHTML="Our Menu",(0,n.rG)(A,o,r),t.appendChild(A),t}(),function(){const e=(0,n.wC)("footer"),t=document.createElement("h3"),A=(0,n.wC)("credits"),r=(0,n.wC)("contact");return t.textContent="The Best in The West",A.innerHTML="Created by Tanner Hornsby",r.innerHTML="(800)-775-2699",(0,n.rG)(e,t,A,r)}()))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,